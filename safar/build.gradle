plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    // Applying the JaCoCo plugin
    id 'jacoco'
}

group 'nl.safar'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation group: 'com.auth0', name: 'java-jwt', version: '3.19.2'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.29'


    //**************
    testCompileOnly group: 'junit', name: 'junit', version: '4.12'

    testCompileOnly "org.mockito:mockito-core:2.+"

    // https://mincong.io/2020/04/19/mockito-junit5/
    testCompileOnly group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.28.2'

    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
//    afterEvaluate {
//        classDirectories.setFrom(files(classDirectories.files.collect {
//            fileTree(dir: it, exclude: [
//                    "nl/springboot/safar/controllers/**",
//                    "nl/springboot/safar/repositories/**",
//                    "nl/springboot/safar/security/**"
//            ])
//        }))
//    }
    reports {
        xml.enabled true
    }
}